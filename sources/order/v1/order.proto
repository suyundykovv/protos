syntax = "proto3";

package order.v1;

option go_package = "github.com/suyundykovv/protos/gen/go/order/v1;orderpb";

import "google/protobuf/timestamp.proto";

service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (Order);
  rpc GetOrder(GetOrderRequest) returns (Order);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (Order);
  rpc ListUserOrders(ListUserOrdersRequest) returns (ListUserOrdersResponse);
  rpc ProcessPayment(PaymentRequest) returns (PaymentResponse);
}

message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  OrderStatus status = 4;
  double subtotal = 5;
  double tax = 6;
  double shipping_cost = 7;
  double total = 8;
  ShippingInfo shipping = 9;
  PaymentInfo payment = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

message OrderItem {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
  double price = 4;
  string image_url = 5;
}

message ShippingInfo {
  string recipient_name = 1;
  string address_line1 = 2;
  string address_line2 = 3;
  string city = 4;
  string state = 5;
  string postal_code = 6;
  string country = 7;
  string phone = 8;
  string tracking_number = 9;
  string shipping_method = 10;
}

message PaymentInfo {
  string payment_id = 1;
  PaymentMethod method = 2;
  PaymentStatus status = 3;
  double amount = 4;
  string transaction_id = 5;
  google.protobuf.Timestamp processed_at = 6;
  string card_last4 = 7;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_PROCESSING = 2;
  ORDER_STATUS_SHIPPED = 3;
  ORDER_STATUS_DELIVERED = 4;
  ORDER_STATUS_CANCELLED = 5;
  ORDER_STATUS_REFUNDED = 6;
}

enum PaymentMethod {
  PAYMENT_METHOD_UNSPECIFIED = 0;
  PAYMENT_METHOD_CREDIT_CARD = 1;
  PAYMENT_METHOD_PAYPAL = 2;
  PAYMENT_METHOD_BANK_TRANSFER = 3;
}

enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_COMPLETED = 2;
  PAYMENT_STATUS_FAILED = 3;
  PAYMENT_STATUS_REFUNDED = 4;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItemRequest items = 2;
  ShippingInfo shipping = 3;
  PaymentMethod payment_method = 4;
}

message OrderItemRequest {
  string product_id = 1;
  int32 quantity = 2;
}

message GetOrderRequest {
  string order_id = 1;
}

message UpdateOrderStatusRequest {
  string order_id = 1;
  OrderStatus new_status = 2;
}

message ListUserOrdersRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
  OrderStatus filter_status = 4;
}

message ListUserOrdersResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
}

message PaymentRequest {
  string order_id = 1;
  PaymentDetails payment = 2;
}

message PaymentDetails {
  PaymentMethod method = 1;
  string card_number = 2; // In practice, use a payment token instead
  string card_expiry = 3;
  string card_cvc = 4;
}

message PaymentResponse {
  bool success = 1;
  string transaction_id = 2;
  string error_message = 3;
}